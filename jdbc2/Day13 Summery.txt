* Statement 객체를 대신하는 PreparedStatement객체
- Statement객체와PreparedStatement객체는 쿼리문을 실행하는 동일한 기능을 제공합니다. 
- 그런데PreparedStatement객체를 사용하는 이유는 이 객체가 값 변환을 자동으로 해주는 기능을 제공하고,
  간결한코드를 만들 수 있기때문입니다. 
- Statement 객체는 지정할 값이 많아질 경우 따옴표가 복잡하게 얽히기 때문에 코드 작성에서 오류가 발생  할 수도있고, 코드 수정시에도 어려움이 발생합니다. 
- 그러나 PreparedStatement 객체는 값을 지정할때 값 부분을 물음표(?)로 처리하기 때문에 간단히 값을   지정할수있습니다. 이때 첫번째 물음표의 인덱스는 1이며, 이후 물음표의 인덱스는 나오는 순서대로 인덱스 값이1씩증가합니다.

*MVC패턴에서의Model
1.DAO클래스(DataAccessObject)
- 데이터베이스에 접속해서 데이터의 추가,삭제,수정 등의 작업을 하는 클래스입니다. 
- 일반적으로 JSP혹은Servlet에서 위의 로직을 함께 기술 할 수도 있지만,
  유지보수 및 코드의 모듈화를 위해 별도의 DAO클래스를 만들어 사용합니다. 
- 보통 한개의 테이블마다 한개의 DAO클래스를 작성합니다. 
- DAO클래스는테이블로부터데이터를읽어와자바객체로 변환하거나 자바 객체의 값을 테이블에 저장합니다. 
- 따라서 DAO를구현하면 테이블의 컬럼과 매핑되는 값을 갖는 자바빈클래스를 항상 작성해야합니다.
 이 자바빈 클래스를 VO클래스라부릅니다. 
- DAO클래스는 front-end개발과 back-end개발을 나누어 할 수 있게 도와줍니다. 

2.VO클래스(ValueObject)/DTO클래스(DataTransferObject)
- DAO클래스를 이용하여 데이터 베이스에서 데이터를 관리할때 데이터를 일반적인 변수에 할당하여 작업할 수도 
 있지만, 별도의 VO 클래스를 작성하여 데이터 베이스와 관련된 변수들의 모음 역할을 합니다
- VO 클래스는 자바빈 클래스로 생성합니다.
