<%@ page contentType="text/html; charset=UTF-8"%>
<!-- 자바예외처리
try {예외 발생 가능성 코드 } catch(Exception e) {예외 발생 시 실행코드}finally{예외발생여부 상관없이 항상 실행}  
public void method ) throws Exception{} 예외처리 강제  -->

<!--1. 예외 페이지 
- 예외 상황이 발생했을 경우 웹 컨테이너(톰캣)에서 제공되는 기본적인 예외 페이지가 보여집니다.
- 개발 과정에서는 이러한 예외 페이지를 보고 어떤 에러가 발생했는지 알 수 있기 때문에 오류를 수정하는데 도움이 된다.
- 그러나 사용자에게 상용 서비스를 제공하고 있는데,이러한 딱딱한 페이지가 보여진다면, 불편하고, 사이트 신뢰도가 하락한다.
- 또한 코드의 일부가 노출되어 보안 측면에도 좋지 않다.
- 따라서, 개발자가 따로 만들어 둔 에러 페이지로 유도해 사용자에게 친숙한 페이지를 보여준다.  -->

<!--2. HTTP요청한 응답 상태 코드 
- 404: 요청한 URL 찾을 수 없음
- 500: 서버측 내부 오류로 인해 페이지가 나타나지 않는 경우(java, jsp 페이지 내의 코드 오류
- 200: 요청을 성공적으로 처리함.
- 307: 임시로 페이지를 리다이렉트함
- 400: 클라이언트의 요청이 잘못된 구문으로 작성됨
- 405: 요청 방식을 허용하지 않음(GET, POST)
- 503: 서버가 일시적으로 서비스를 제공할 수 없음(일시적 서버 과부화, 서버 임시 보수등)
-->

<!--3.에러를 처리하는 방법
1)직접 예외 처리하기  
  자바의 키워드 : try~catch 사용해 직접 개발자가 예외를 처리한다.
 
2) 예외를 처리할 페이지를 따로 지정하기
- JSP는 실행 도중 예외가 발생할 때 톰캣 기본 에러화면 대신 개발자가 지정한 JSP페이지를 보여줄 수 있는 기능을 제공한다.
- 에러가 발생하면 보여줄 JSP페이지는 페이지 지시자의 errorPage 속성을 사용하여 지정한다.
- 예외가 발생할 것으로 예상되는 페이지에 예외가 발생했을 때 보여줄 페이지를 지정한다.
ex) <%@ page errorPage="예외가 발생했을 시 보여줄 페이지" %>
- 에러 페이지로 지정된 JSP 파일 내에서는 예외를 처리해주는 exception 내장객체를 사용할 수 ㅣㅆ다.
- 인터넷 익스플로어 브라우저의 경우 전체 응답 결과의 데이터가512바이트보다 작을 경우 마이크로소프트에서 
 자체 제공하는 에러 페이지를 출력한다.
 
 3) 응답 상태 코드별로 에러 페이지 지정하기
 - JSP는 에러 코드별로 사용할 에러 페이지를 web.xml 파일 수정을 통해 지정할 수 있다.
 - 이렇게 지정한 에러페이지는 일반 JSP 파일과 동일하게 작성하면 된다.
 
 4) 예외 타입별로 에러 페이지 지정하기 
 - 발생하는 예외의 종류별로도 에러 페이지를 지정할 수 있다. web.xml 파일을 수정한다.--!>
<%
	String id = request.getParameter("id");
%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title></title>
</head>
<body>
	<%try {	%>
	  <h4><%=id.toUpperCase()%></h4>
	<%} catch (Exception e) {%>
	
	  <h4>죄송합니다. 서버측 오류가 발생했습니다.<h4>
	  <p><strong>잠시만 기다리시면 빠른 시간 내에 해결하겠습니다</strong></p>
	  
	<% } %>
	
<!--URL 에 ? id = "oooo " => 파라미터를 주면 아이디가 출력되고, 파라미터를 입력하지 않으면 그냥 출력다.  --> 
</body>
</html>

<!-- request: 요청 정보 사용, 파라미터 기능 value
     서버와 클라이언트 연결, 쿠키 기능 get,
   response : sendRedirect : 링크 연결 
   cookie : addcookie
   session : 페이지간의 데이터들 연결 , 원할 떄마다 저장하고 꺼내 쓸수 있다.
   application : 서버 켜져있는동안 실행되고, 서버 꺼지면 안된다.  -->